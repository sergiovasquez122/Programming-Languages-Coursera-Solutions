syntax:
   if e1 then e2 else e3

where if, then and else are keywords and e1, e2 and e3 are subexpressions

type-checking:
  first e1 must have type bool
  e2 and e3 can have any type t, but they have the same type
  the type of teh entire expression is also t

evaluation rules:
   first, evaluate e1 to a value call ti v1
   if it's true, evaluate e2 and that result is the whole expressions' result
   else, evaluate e3 and that result is the whole expression's result

syntax:
   if e1 < e2 then e3 else e4

if, < , then and else are keywords and e1, e2, e3 and e4 are subexpressions

type-checking:
e1 and e2 must be of the same type and be comparable.

e3 and e4 are of the same type.

evaluation rule.

evalutate e1 to a value v2, e2 to a value v2 if it's true then evaluate e3 and that is the reuslt of the expressions.
else evalute e4 and that is the result of the expression.
