!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
addAllOpt	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun addAllOpt(xs : int option list) = $/;"	f	language:SML
addOpt	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun addOpt(x : int option, y : int option) = $/;"	f	language:SML
all	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun all(xs : bool list) = $/;"	f	language:SML
alternate	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun alternate(xs : int list) = $/;"	f	language:SML
any	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun any(xs : bool list) = $/;"	f	language:SML
cumsum	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun cumsum(xs : int list) =$/;"	f	language:SML
descendingSorted	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^let fun descendingSorted(xs : int list) = $/;"	f	language:SML
divide	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun divide(xs : int list) = $/;"	f	language:SML
factorize	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun factorize(n : int) = $/;"	f	language:SML
first	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^        let val first = hd xs$/;"	v	language:SML
first	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^      let val first = hd xs$/;"	v	language:SML
first	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^  else let val first = #1 (hd xs)$/;"	v	language:SML
fullDivide	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun fullDivide(k : int, n : int) = $/;"	f	language:SML
greeting	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun greeting(s : string option) = $/;"	f	language:SML
head	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^       val head = hd xs$/;"	v	language:SML
head	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^      val head = hd xs$/;"	v	language:SML
head	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^  else let val head = hd ls$/;"	v	language:SML
head	/home/sergio/Programming-Languages-Coursera-Solutions/week1/options.sml	/^               val head = hd xs$/;"	v	language:SML
head	/home/sergio/Programming-Languages-Coursera-Solutions/week1/options.sml	/^        val head = hd xs$/;"	v	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^  fun helper(ls : int list, currsum : int) = $/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^  fun helper(n : int ,accum : int) = $/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^  fun helper(xs : int list, lhs : int list, rhs : int list) = $/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^  fun helper(xs : int list, neg : int list, pos : int list) =$/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^  fun helper(xs : int list, neg : int list, pos : int list) =$/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^  fun helper(xs' : int list, ys' : int list) = $/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^let fun helper(current_n, divisor) = $/;"	f	language:SML
isAnySorted	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun isAnySorted(xs : int list) = $/;"	f	language:SML
isSorted	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun isSorted(xs : int list) = $/;"	f	language:SML
lhs	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^      val (lhs, rhs) = divide(xs)$/;"	v	language:SML
lhs	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^      val (lhs, rhs) = splitAt(rest, head)$/;"	v	language:SML
lhs_sorted	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^      val lhs_sorted = not_so_quick_sort(lhs)$/;"	v	language:SML
lookup	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun lookup(xs : (string * int) list, key : string) = $/;"	f	language:SML
max1	/home/sergio/Programming-Languages-Coursera-Solutions/week1/options.sml	/^fun max1(xs : int list) = $/;"	f	language:SML
max2	/home/sergio/Programming-Languages-Coursera-Solutions/week1/options.sml	/^fun max2(xs : int list) = $/;"	f	language:SML
max_nonempty	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^  fun max_nonempty(xs : int list) = $/;"	f	language:SML
max_nonempty	/home/sergio/Programming-Languages-Coursera-Solutions/week1/options.sml	/^    fun max_nonempty(xs : int list) = $/;"	f	language:SML
min_max	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun min_max(xs : int list) = $/;"	f	language:SML
min_nonempty	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^  fun min_nonempty(xs : int list) = $/;"	f	language:SML
multiply	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun multiply(xs : (int * int) list) = $/;"	f	language:SML
next_elem	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^       val next_elem = hd (tl xs)$/;"	v	language:SML
not_so_quick_sort	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun not_so_quick_sort(xs : int list) = $/;"	f	language:SML
old_max	/home/sergio/Programming-Languages-Coursera-Solutions/week1/options.sml	/^fun old_max(xs : int list) = $/;"	f	language:SML
pow	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^    let fun pow(x : int, y: int) = $/;"	f	language:SML
qsort	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun qsort(xs : int list) = $/;"	f	language:SML
repeat	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun repeat(xs : int list, ys : int list) = $/;"	f	language:SML
rest	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^      val rest = tl xs$/;"	v	language:SML
result	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^           val result = currsum + head$/;"	v	language:SML
reverse	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^    fun reverse(xs : int list, aux : int list) = $/;"	f	language:SML
reverse	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^    fun reverse(xs : int list, aux : int list) = $/;"	f	language:SML
reverse	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^    fun reverse(xs : int list, aux : int list) = $/;"	f	language:SML
rhs_sorted	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^      val rhs_sorted = not_so_quick_sort(rhs)$/;"	v	language:SML
second	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^            val second = hd (tl xs)$/;"	v	language:SML
second	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^           val second = #2 (hd xs)$/;"	v	language:SML
second	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^          val second = hd (tl xs)$/;"	v	language:SML
sortedMerge	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun sortedMerge(xs : int list, ys : int list) = $/;"	f	language:SML
splitAt	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun splitAt(xs : int list, threshold : int) = $/;"	f	language:SML
splitup	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun splitup(xs : int list) = $/;"	f	language:SML
tail	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^           val tail = tl ls$/;"	v	language:SML
tail_ans	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^    else let val tail_ans = max_nonempty(tl xs)$/;"	v	language:SML
tail_ans	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^    else let val tail_ans = min_nonempty(tl xs)$/;"	v	language:SML
times_went_in	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^            val (times_went_in, new_dividend) = fullDivide(divisor, current_n)$/;"	v	language:SML
tl_ans	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^    let val tl_ans = addAllOpt(tl xs)$/;"	v	language:SML
tl_ans	/home/sergio/Programming-Languages-Coursera-Solutions/week1/options.sml	/^      else let val tl_ans = max_nonempty(tl xs)$/;"	v	language:SML
tl_ans	/home/sergio/Programming-Languages-Coursera-Solutions/week1/options.sml	/^    let val tl_ans = old_max(tl xs)$/;"	v	language:SML
tl_ans	/home/sergio/Programming-Languages-Coursera-Solutions/week1/options.sml	/^    val tl_ans = max1(tl xs)$/;"	v	language:SML
x	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^      val x = #1 (hd xs)$/;"	v	language:SML
xs_head	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^else let val xs_head = hd xs$/;"	v	language:SML
xs_length	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^  val xs_length = length xs$/;"	v	language:SML
y	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^      val y = #2 (hd xs)$/;"	v	language:SML
ys_head	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^         val ys_head = hd ys$/;"	v	language:SML
ys_length	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^  val ys_length = length ys$/;"	v	language:SML
zip	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun zip(xs : int list, ys : int list) = $/;"	f	language:SML
zipOpt	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun zipOpt(xs : int list, ys : int list) = $/;"	f	language:SML
zipRecycle	/home/sergio/Programming-Languages-Coursera-Solutions/week1/exercises.sml	/^fun zipRecycle(xs : int list, ys : int list) = $/;"	f	language:SML
