!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
'a	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^datatype 'a tree = leaf | node of {value : 'a, left : 'a tree, right : 'a tree}$/;"	t	language:SML
add	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun add(x, y) = $/;"	f	language:SML
addAllOpt	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun addAllOpt(xs) = $/;"	f	language:SML
addOpt	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun addOpt(x, y) = $/;"	f	language:SML
all	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun all(xs) = $/;"	f	language:SML
all'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun all'(f, xs) = $/;"	f	language:SML
all_except_option	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^fun all_except_option(x, xs) = $/;"	f	language:SML
all_products	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun all_products(xs) = $/;"	f	language:SML
all_same_color	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^fun all_same_color(cs) = $/;"	f	language:SML
alternate	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun alternate(xs) = $/;"	f	language:SML
any	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun any(xs) = $/;"	f	language:SML
append'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun append'(xs, ys) = $/;"	f	language:SML
BadList	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^exception BadList$/;"	e	language:SML
card	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^type card = suit * rank$/;"	t	language:SML
card_color	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^fun card_color(c) = $/;"	f	language:SML
card_sum	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^  val card_sum = sum_cards(cs) $/;"	v	language:SML
card_value	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^fun card_value(c) = $/;"	f	language:SML
cmp	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun cmp(x, y) = x >= y$/;"	f	language:SML
color	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^datatype color = Red | Black$/;"	t	language:SML
concat'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun concat' l = $/;"	f	language:SML
constructFromRange	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun constructFromRange(from, to) = $/;"	f	language:SML
contains	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun contains(theSet, x) = $/;"	f	language:SML
cumsum	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun cumsum(xs) = $/;"	f	language:SML
current_status	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^  fun current_status(held_cards, card_list, move_list) = $/;"	f	language:SML
dates_in_month	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun dates_in_month(dates, month) = $/;"	f	language:SML
dates_in_months	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun dates_in_months(dates, months) = $/;"	f	language:SML
dates_in_months_challenge	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun dates_in_months_challenge(dates, months) = $/;"	f	language:SML
date_to_string	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun date_to_string(day, month, year) = $/;"	f	language:SML
day_left	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  val day_left = #1 xs$/;"	v	language:SML
day_right	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  val day_right = #1 ys$/;"	v	language:SML
DifferentLengths	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^exception DifferentLengths$/;"	e	language:SML
divide	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun divide(xs) = $/;"	f	language:SML
drop'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun drop'(l, i) = $/;"	f	language:SML
equal	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^     | ((s', i))::xs' => (let val equal = s' = s$/;"	v	language:SML
equal_length	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  val equal_length = length xs = length ys$/;"	v	language:SML
exists'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun exists'(f, xs) = $/;"	f	language:SML
factorize	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun factorize(n) = $/;"	f	language:SML
factors	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^           val factors = generate_factors(unrolled, 1)$/;"	v	language:SML
factors_no_dups	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^           val factors_no_dups = remove_duplicates(factors)$/;"	v	language:SML
filter'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun filter' f a = $/;"	f	language:SML
filter'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun filter'(f, xs) = $/;"	f	language:SML
final_grade	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^type final_grade = {id : student_id, grade : grade option}$/;"	t	language:SML
find'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun find'(f, xs) = $/;"	f	language:SML
find_elem	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun find_elem(xs, x) =$/;"	f	language:SML
flag	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^datatype flag = leave_me_alone | prune_me$/;"	t	language:SML
fullDivide	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun fullDivide(k, n) = $/;"	f	language:SML
g	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  fun g x = not (f x)$/;"	f	language:SML
gardener	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun gardener(root) =$/;"	f	language:SML
generate_factors	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun generate_factors(xs, curr) = $/;"	f	language:SML
getItem	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun getItem l = $/;"	f	language:SML
getOpt'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun getOpt'(opt, a) = $/;"	f	language:SML
get_nth	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun get_nth(str, n) = $/;"	f	language:SML
get_substitutions1	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^fun get_substitutions1(xs, s) = $/;"	f	language:SML
get_substitutions2	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^fun get_substitutions2(xs, s) = $/;"	f	language:SML
grade	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^type grade = int$/;"	t	language:SML
greeting	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun greeting(s) = $/;"	f	language:SML
has_passed	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun has_passed(g) = $/;"	f	language:SML
hd'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun hd'(xs) = $/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^    fun helper(n, acc) = $/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^    fun helper(xs, curr, acc) = $/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  fun helper(curr_sum, nth, xs) = $/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  fun helper(from, to) = $/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  fun helper(l, acc) = $/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  fun helper(n, acc) = $/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  fun helper(xs, acc) = $/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^let fun helper(acc, y) =$/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^let fun helper(current_n, divisor) = $/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^let fun helper(xs, aux) =$/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^  fun helper(cs, acc) =$/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^  fun helper(xs) = $/;"	f	language:SML
helper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^  fun helper(xs, acc) = $/;"	f	language:SML
IllegalMove	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^exception IllegalMove$/;"	e	language:SML
intersection	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun intersection(xs, ys) = $/;"	f	language:SML
intSet	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^datatype intSet = $/;"	t	language:SML
int_to_nat	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun int_to_nat n = $/;"	f	language:SML
isAnySorted	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun isAnySorted(xs) = $/;"	f	language:SML
isEmpty	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun isEmpty(theSet) = $/;"	f	language:SML
isSome'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun isSome' opt = $/;"	f	language:SML
isSorted	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun isSorted(xs) = $/;"	f	language:SML
isSortedCmp	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun isSortedCmp(xs, cmp) = $/;"	f	language:SML
is_leap_year	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  let fun is_leap_year(year) = $/;"	f	language:SML
is_older	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun is_older(xs : (int * int * int), ys : (int * int * int)) = $/;"	f	language:SML
is_positive	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun is_positive n =$/;"	f	language:SML
last'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun last'(xs) = $/;"	f	language:SML
length'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun length' xs = $/;"	f	language:SML
less_than	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun less_than(x, y) = $/;"	f	language:SML
lhs	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^                     val (lhs, rhs) = splitAt(xs', x)$/;"	v	language:SML
lhs	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^                    val (lhs, rhs) = divide(xs')$/;"	v	language:SML
lhs	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^                    val (lhs, rhs) = partition'(f, xs')$/;"	v	language:SML
lhs	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^           val (lhs, rhs) = divide(l)$/;"	v	language:SML
lhs_sorted	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^           val lhs_sorted = not_so_quick_sort(lhs)$/;"	v	language:SML
list_with	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^                val list_with = generate_factors(xs', with_hd)$/;"	v	language:SML
list_without	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^       val list_without = generate_factors(xs', curr)$/;"	v	language:SML
lookup	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun lookup(xs, s) =$/;"	f	language:SML
map'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun map' (f,xs) = $/;"	f	language:SML
max	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun max(xs) = $/;"	f	language:SML
min	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun min(xs) = $/;"	f	language:SML
months	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  let val months = ["January", "February","March", "April", "May", "June", "July","August", "September", "October", "November", "December"]$/;"	v	language:SML
months_durations_in_days	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^    val months_durations_in_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30,$/;"	v	language:SML
months_durations_in_days_leap	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^             val months_durations_in_days_leap = [31, 29, 31, 30, 31, 30, 31,$/;"	v	language:SML
months_durations_in_days_regular	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^    val months_durations_in_days_regular = [31, 28, 31, 30, 31, 30, 31, 31, 30,$/;"	v	language:SML
month_left	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  val month_left = #2 xs$/;"	v	language:SML
month_range	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun month_range(day1, day2) = $/;"	f	language:SML
month_right	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  val month_right = #2 ys$/;"	v	language:SML
month_str	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^    val month_str = get_nth(months, month)$/;"	v	language:SML
move	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^datatype move = Discard of card | Draw$/;"	t	language:SML
mult	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun mult(x, y) = $/;"	f	language:SML
multiply	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun multiply(xs) = $/;"	f	language:SML
nat	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^datatype nat = ZERO | SUCC of nat$/;"	t	language:SML
nat_to_int	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun nat_to_int n = $/;"	f	language:SML
Negative	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^exception Negative $/;"	e	language:SML
non_empty	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^let fun non_empty(dates) = $/;"	f	language:SML
not_so_quick_sort	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun not_so_quick_sort(xs) = $/;"	f	language:SML
nth	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun nth(l, i) = $/;"	f	language:SML
null'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun null' xs = $/;"	f	language:SML
number_before_reaching_sum	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun number_before_reaching_sum(sum, xs) = $/;"	f	language:SML
number_in_month	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun number_in_month(xs, x) = $/;"	f	language:SML
number_in_months	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun number_in_months(dates, months) = $/;"	f	language:SML
number_in_months_challenge	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun number_in_months_challenge(dates, months) = $/;"	f	language:SML
number_of_misgraded	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun number_of_misgraded(xs) =$/;"	f	language:SML
number_passed	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun number_passed(xs) = $/;"	f	language:SML
officiate	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^fun officiate(card_list, move_list, goal) = $/;"	f	language:SML
oldest	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun oldest(dates) = $/;"	f	language:SML
partition'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun partition'(f, xs) = $/;"	f	language:SML
pass_fail	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^datatype pass_fail = pass | fail$/;"	t	language:SML
pass_or_fail	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun pass_or_fail({grade = g, id = x}) =$/;"	f	language:SML
pred	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun pred n = $/;"	f	language:SML
prelim_score	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^  val prelim_score = if card_sum > goal $/;"	v	language:SML
qsort	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun qsort(xs) = $/;"	f	language:SML
rank	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^datatype rank = Jack | Queen | King | Ace | Num of int$/;"	t	language:SML
reasonable_date	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun reasonable_date(day, month, year) = $/;"	f	language:SML
remove_card	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^fun remove_card(cs, c, e) = $/;"	f	language:SML
remove_duplicates	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun remove_duplicates(xs) = $/;"	f	language:SML
remove_dups	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  val remove_dups = remove_duplicates(months)$/;"	v	language:SML
remove_dups	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  val remove_dups = remove_duplicates(months)$/;"	v	language:SML
repeat	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun repeat(xs, ys) = $/;"	f	language:SML
rest	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^                  else let val rest = remove_card(cs', c, e)$/;"	v	language:SML
rev'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun rev' l = $/;"	f	language:SML
revAppend'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun revAppend'(l1, l2) = $/;"	f	language:SML
reverse	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^    fun reverse(xs, acc) = $/;"	f	language:SML
rhs_sorted	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^           val rhs_sorted = not_so_quick_sort(rhs)$/;"	v	language:SML
score	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^fun score(cs, goal) =$/;"	f	language:SML
similar_names	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^fun similar_names(xs, {first=f,middle=m,last=l}) = $/;"	f	language:SML
sorted	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^           val sorted = qsort(factors_no_dups)$/;"	v	language:SML
sortedMerge	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun sortedMerge(xs, ys) = $/;"	f	language:SML
split1	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^     | x'::xs' => let val (split1, split2) = splitAt(xs',x)$/;"	v	language:SML
split1	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^     | x'::xs' => let val (split1, split2) = splitup(xs',x)$/;"	v	language:SML
splitAt	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun splitAt(xs, x) = $/;"	f	language:SML
splitup	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun splitup(xs, x) =$/;"	f	language:SML
student_id	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^type student_id = int$/;"	t	language:SML
sub	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun sub(x, y) = $/;"	f	language:SML
subs_xs	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^  val subs_xs = get_substitutions1(xs, f)$/;"	v	language:SML
suit	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^datatype suit = Clubs | Diamonds | Hearts | Spades$/;"	t	language:SML
sum_cards	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2.sml	/^fun sum_cards(cs) = $/;"	f	language:SML
sum_tree	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun sum_tree root =$/;"	f	language:SML
take'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun take'(l, i) = $/;"	f	language:SML
test1	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2test.sml	/^val test1 = all_except_option ("string", ["string"]) = SOME []$/;"	v	language:SML
test10	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2test.sml	/^val test10 = score ([(Hearts, Num 2),(Clubs, Num 4)],10) = 4$/;"	v	language:SML
test11	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2test.sml	/^val test11 = officiate ([(Hearts, Num 2),(Clubs, Num 4)],[Draw], 15) = 6$/;"	v	language:SML
test12	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2test.sml	/^val test12 = officiate ([(Clubs,Ace),(Spades,Ace),(Clubs,Ace),(Spades,Ace)],$/;"	v	language:SML
test13	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2test.sml	/^val test13 = ((officiate([(Clubs,Jack),(Spades,Num(8))],$/;"	v	language:SML
test2	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2test.sml	/^val test2 = get_substitutions1 ([["foo"],["there"]], "foo") = []$/;"	v	language:SML
test3	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2test.sml	/^val test3 = get_substitutions2 ([["foo"],["there"]], "foo") = []$/;"	v	language:SML
test4	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2test.sml	/^val test4 = similar_names$/;"	v	language:SML
test5	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2test.sml	/^val test5 = card_color (Clubs, Num 2) = Black$/;"	v	language:SML
test6	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2test.sml	/^val test6 = card_value (Clubs, Num 2) = 2$/;"	v	language:SML
test7	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2test.sml	/^val test7 = remove_card ([(Hearts, Ace)], (Hearts, Ace), IllegalMove) = []$/;"	v	language:SML
test8	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2test.sml	/^val test8 = all_same_color [(Hearts, Ace), (Hearts, Ace)] = true$/;"	v	language:SML
test9	/home/sergio/Programming-Languages-Coursera-Solutions/week2/hw2test.sml	/^val test9 = sum_cards [(Clubs, Num 2),(Clubs, Num 2)] = 4$/;"	v	language:SML
times_went_in	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^                  let val (times_went_in, new_dividend) = fullDivide(divisor,$/;"	v	language:SML
tl'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun tl'(xs) = $/;"	f	language:SML
tl_ans	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^                    val tl_ans = max(xs')$/;"	v	language:SML
toList	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun toList(set) = $/;"	f	language:SML
tree_height	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun tree_height root = $/;"	f	language:SML
unroll	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun unroll(xs) = $/;"	f	language:SML
unrolled	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^           val unrolled = unroll(x::xs)$/;"	v	language:SML
unroll_helper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun unroll_helper(xs) = $/;"	f	language:SML
valOf'	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun valOf' opt =$/;"	f	language:SML
what_month	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun what_month(day) = $/;"	f	language:SML
with_hd	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^     | x::xs' => let val with_hd = curr * x$/;"	v	language:SML
year_left	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  val year_left = #3 xs$/;"	v	language:SML
year_right	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^  val year_right = #3 ys$/;"	v	language:SML
zip	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun zip(xs, ys) = $/;"	f	language:SML
zipHelper	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^let fun zipHelper(xs', ys', xs_shorter_than_ys) = $/;"	f	language:SML
zipOpt	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun zipOpt(xs, ys) = $/;"	f	language:SML
ziprecycle	/home/sergio/Programming-Languages-Coursera-Solutions/week2/exercises.sml	/^fun ziprecycle(xs, ys) = $/;"	f	language:SML
